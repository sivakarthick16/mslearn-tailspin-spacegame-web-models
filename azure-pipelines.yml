pool: EMRSTGSERVER

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '8.0.x'
  http_proxy: http://eproxy-emaar.goskope.com:8081
  https_proxy: http://eproxy-emaar.goskope.com:8081
  NODE_TLS_REJECT_UNAUTHORIZED: "0"

steps:
- powershell: |
    [Environment]::SetEnvironmentVariable("HTTP_PROXY", "http://eproxy-emaar.goskope.com:8081", "Process")
    [Environment]::SetEnvironmentVariable("HTTPS_PROXY", "http://eproxy-emaar.goskope.com:8081", "Process")
    [Environment]::SetEnvironmentVariable("http_proxy", "http://eproxy-emaar.goskope.com:8081", "Process")
    [Environment]::SetEnvironmentVariable("https_proxy", "http://eproxy-emaar.goskope.com:8081", "Process")
    [Environment]::SetEnvironmentVariable("NODE_TLS_REJECT_UNAUTHORIZED", "0", "Process")
  displayName: "Set proxy environment variables via powershell"

- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Pack the project - $(buildConfiguration)'
  inputs:
    command: 'pack'
    projects: '**/*.csproj'
    arguments: '--no-build --configuration $(buildConfiguration)'
    versioningScheme: byPrereleaseNumber
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'
 
- task: NuGetCommand@2
  displayName: 'Publish NuGet package'
  inputs:
    command: push
    feedPublish: '$(System.TeamProject)/Tailspin.SpaceGame.Web.Models'
    allowPackageConflicts: true
  env:
    HTTP_PROXY: $(HTTP_PROXY)
    HTTPS_PROXY: $(HTTPS_PROXY)
    NODE_TLS_REJECT_UNAUTHORIZED: $(NODE_TLS_REJECT_UNAUTHORIZED)
  condition: succeeded()
